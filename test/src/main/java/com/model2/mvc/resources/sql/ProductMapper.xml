<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--	
	UserMapper.xml :: SQL 를 갖는 MetaData 
	
	- MyBatis Framework 은 XML MetaData 를 사용 SQL구문을 관리
	  (SQL은 xml 을 통해 적절히 캡슐화 되어 애플리케이선 외부로 분리함)
	- SQL문의 입력(?) / 출력(?)을 매핑한다.  <== 아래의 select element 참조
 -->		
 					
<mapper namespace="ProductMapper">

	<!-- 위의  namespace 이용 Application 에서 UserMapper.~~ 로 아래의 SQL 을 참조  
	 	  :: 아래의 query 수행 후 결과 resultType 에 선언된 User Domain Object 
	 	   	  Field ( property )에 자동연결(?,바인딩)
	 	  :: SQL / Query 의 Alias 와 User Domain Object 의 Field 이름 동일한 것 확인.  -->
  	
  	<resultMap id="productSelectMap" type="com.model2.mvc.service.domain.Product">
  		<result property="prodNo" column="prod_no" jdbcType="NUMERIC"/>
  		<result property="prodName" column="prod_name" jdbcType="VARCHAR"/>
  		<result property="prodDetail" column="prod_detail" jdbcType="VARCHAR"/>
  		<result property="manuDate" column="manufacture_day" jdbcType="VARCHAR"/>
  		<result property="price" column="price" jdbcType="NUMERIC"/>
  		<result property="fileName" column="image_file" jdbcType="VARCHAR"/>
  		<result property="regDate" column="reg_date" jdbcType="DATE"/>
  		<result property="tranCode" column="tran_status_code" jdbcType="VARCHAR"/>
  	</resultMap>
  	
  	<insert id="insertProduct" parameterType="com.model2.mvc.service.domain.Product">
  		INSERT
  		INTO product
  		VALUES (
  			seq_product_prod_no.nextval, #{prodName:VARCHAR}, #{prodDetail:VARCHAR},
  			#{manuDate:VARCHAR}, #{price:NUMERIC}, #{fileName:VARCHAR}, sysdate
  		)
  		
  	</insert>
  	
  	<select id="selectProduct" parameterType="int" resultMap="productSelectMap">
  		SELECT p.prod_no prod_no, p.prod_name prod_name, p.prod_detail prod_detail, p.manufacture_day manufacture_day, p.price price, p.image_file image_file, p.reg_date reg_date, t.tran_status_code tran_status_code
  		FROM product p, transaction t
  		WHERE p.prod_no = t.prod_no(+) AND p.prod_no = #{value}
  	</select>
  	
  	<update id="updateProduct" parameterType="com.model2.mvc.service.domain.Product">
  		UPDATE product
  		SET	prod_no = #{prodNo},
  			prod_name = #{prodName:VARCHAR},
  			prod_detail = #{prodDetail:VARCHAR},
  			manufacture_day = #{manuDate:VARCHAR},
  			price = #{price:NUMERIC},
  			image_file = #{fileName:VARCHAR}
  			
<!--   			reg_date = #{regDate:DATE} -->
  		WHERE prod_no = #{prodNo}
  	</update>
  	
  	<delete id="deleteProduct" parameterType="string">
  		DELETE
  		FROM product
  		WHERE prod_name = #{value}
  	</delete>
  	
  	
  	<sql id="getProductListSubQuery">
  		SELECT p.prod_no prod_no, p.prod_name prod_name, p.prod_detail prod_detail, p.manufacture_day manufacture_day, p.price price, p.image_file image_file, p.reg_date reg_date, t.tran_status_code tran_status_code
  		FROM product p, transaction t
  		
  		<where>
  			<choose>
<!--   				<if test="searchCondition != null"> -->
  					<when test='searchCondition == "0" and searchKeyword != "" '>
  						p.prod_no = #{searchKeyword}
  					</when>
  					
  					<when test='searchCondition == "1" and searchKeyword != "" '>
<!--   						p.prod_name = #{searchKeyword} -->
						p.prod_name LIKE '%'||#{searchKeyword}||'%'
  					</when>
  					
  					<when test='searchCondition == "2" and searchKeyword != "" '>
  						p.price = #{searchKeyword}
  					</when>
<!--   				</if> -->
  			</choose>
  			

  			<if test='showOption != null and showOption == "notShow"'>
  				AND t.tran_status_code IS NULL
  			</if>
  		
  			AND p.prod_no = t.prod_no(+)
  			
  			<choose>
<!--   				<if test="orderByOption != null"> -->
  					<when test=' orderByOption == null or orderByOption == "" '>
  						ORDER BY reg_date DESC
  					</when>
  					
  					<when test='orderByOption == "asc"'>
  						ORDER BY price ASC
  					</when>
  					
  					<when test='orderByOption =="desc"'>
  						ORDER BY price DESC
  					</when>
<!--   				</if> -->
  			</choose>
  		</where>
  	</sql>
  	
  	<select id="getProductList" parameterType="com.model2.mvc.common.SearchVO" resultMap="productSelectMap">
  		SELECT *
  		FROM ( SELECT inner_table.*, ROWNUM AS row_seq
  		FROM (<include refid="getProductListSubQuery"/> ) inner_table
  		WHERE ROWNUM <![CDATA[<=]]> #{page} * #{pageSize} )
  		WHERE row_seq BETWEEN ((#{page} - 1) * #{pageSize} + 1) AND #{page} * #{pageSize}
  	
  	</select>
  	
  	
  	<select id="getTotalCount" parameterType="com.model2.mvc.common.SearchVO" resultType="int">
  		SELECT COUNT(*)
  		FROM ( <include refid="getProductListSubQuery"/> )
  	</select>
  	
</mapper>